{"config":{"lang":["en","es","fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#geonode-cloud","title":"GeoNode Cloud","text":"<p>GeoNode Cloud is an advanced cloud-based implementation of the GeoNode platform, optimized for leveraging native or cloud-adapted technologies. This solution is designed to be deployed on Kubernetes, enabling scalability, efficient management, and resilience.</p> <p>GeoNode Cloud includes the GeoServer Cloud project, which provides strong support for the publication, editing, and management of geospatial data. This integration reinforces GeoNode Cloud\u2019s role as a modern, efficient infrastructure for managing geospatial information in the cloud.</p> <p>By using GeoNode Cloud, organizations can benefit from increased flexibility, reduced operational costs, and seamless integration with other cloud-native tools and services.</p>"},{"location":"architecture/","title":"Architecture &amp; Technology","text":"<p>The solution architecture is divided into the following components:</p> <ul> <li>GeoNode Cloud Core: Contains the foundational infrastructure elements of GeoNode in the cloud.</li> <li>GeoNode Cloud Mapstore Client: Provides the user interface for map visualization and manipulation.</li> <li>RabbitMQ: A message broker that facilitates asynchronous communication between services.</li> <li>GeoServer Cloud: Manages and publishes geospatial data.</li> <li>Postgres with PostGIS extension:  A relational database that allows spatial data storage and querying.</li> <li>Nginx:  A web server and load balancer.</li> <li>Flower:  A Celery task monitor.</li> </ul> <p>The GeoNode Cloud Core component includes the following main technologies for its operation:</p> <ul> <li>Django Framework</li> <li>Memcached</li> <li>GeoNode Import</li> <li>pyCSW</li> <li>Celery</li> <li>GeoServer App Django - ACL Capability</li> </ul> <p>The architecture is based on a microservices approach, with plans to gradually decompose components currently within the monolithic Django setup into separate microservices.</p>"},{"location":"architecture/#distribution-and-deployment","title":"Distribution and Deployment","text":"<p>Docker images for all services are available on DockerHub under the KAN Territory &amp; IT organization.</p> <p>Production-ready deployment files for <code>docker-compose</code> and <code>podman</code> are available in the docs/deploy folder.</p>"},{"location":"architecture/#contributing","title":"Contributing","text":"<p>Please read the contribution guidelines before submitting pull requests to the GeoNode Cloud project.</p> <p>Follow the developer's guide for more details on the project's technical aspects.</p>"},{"location":"architecture/#status","title":"Status","text":"<p>Check the changelog for the latest updates.</p>"},{"location":"architecture/#bugs","title":"Bugs","text":"<p>Report issues for GeoNode Cloud on the Issues GitHub page.</p>"},{"location":"architecture/#roadmap","title":"Roadmap","text":"<p>To be determined (TBD).</p>"},{"location":"deployment/","title":"Deployment","text":"<p>GeoNode Cloud can be deployed on various Kubernetes platforms. Here are the steps for deploying it on MicroK8S.</p>"},{"location":"deployment/#deployment-on-microk8s","title":"Deployment on MicroK8S","text":""},{"location":"deployment/#requirements","title":"Requirements","text":"<ul> <li>MicroK8S:<ul> <li>Ingress module</li> <li>DNS module</li> <li>Cert-manager module</li> </ul> </li> </ul>"},{"location":"deployment/#install-microk8s-with-snap","title":"Install MicroK8S with Snap","text":"<pre><code>sudo snap install microk8s --classic\n</code></pre>"},{"location":"deployment/#enable-required-microk8s-modules","title":"Enable Required MicroK8S Modules","text":"<pre><code>microk8s enable ingress\nmicrok8s enable cert-manager\n</code></pre>"},{"location":"deployment/#create-cert-manager-configuration-for-lets-encrypt","title":"Create Cert-Manager Configuration for Let's Encrypt","text":"<p>Replace <code>YOUREMAIL@DOMAIN.com</code> with your own email address.</p> <pre><code>microk8s kubectl apply -f - &lt;&lt;EOF\n---\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt\nspec:\n  acme:\n    email: YOUREMAIL@DOMAIN.com\n    server: https://acme-v02.api.letsencrypt.org/directory\n    privateKeySecretRef:\n      # Secret resource that will be used to store the account's private key.\n      name: letsencrypt-account-key\n    # Add a single challenge solver, HTTP01 using nginx\n    solvers:\n    - http01:\n        ingress:\n          class: public\nEOF\n</code></pre>"},{"location":"deployment/#deployment_1","title":"Deployment","text":""},{"location":"deployment/#clone-the-repository","title":"Clone the Repository","text":"<pre><code>git clone https://github.com/Kan-T-IT/geonode-cloud.git &amp;&amp; cd geonode-cloud\n</code></pre>"},{"location":"deployment/#configure-the-environment-variables","title":"Configure the Environment Variables","text":"<p>Edit the <code>.env</code> file with the necessary information:</p> <pre><code>KUBERNETES_SITE_URL=GEONODE_CLOUD_FINAL_URL    # i.e.: cloud.mygeonode.com\nKUBERNETES_NODE_NAME=YOUR_CLUSTER_NAME_NAME    # usually host machine name\nKUBERNETES_VOL_DIR=YOUR_DESIRED_LOCATION       # this path shold exist\nCLUSTER_ISSUER_NAME=YOUR_CLUSTER_ISSUER_NAME   # created earlier in this guide\nSERVER_PUBLIC_IP=YOU.RPU.BLI.CIP               # the public ipv4 of the server\nGEONODE_PASSWORD=admin                         # password for geonode admin user\nGEOSERVER_PASSWORD=geoserver                   # password for geoserver admin user\n</code></pre>"},{"location":"deployment/#run-the-installation-script","title":"Run the Installation Script","text":"<pre><code>./install.sh\n</code></pre> <p>GeoNode Cloud should now be ready to use.</p>"},{"location":"project/","title":"Project Structure","text":"<p>The project structure for deploying GeoNode Cloud and GeoServer Cloud on Kubernetes is organized into key directories that contain the manifests required to configure and operate the applications. The following repository includes all the manifests needed for deployment.</p> <p>Main Directories</p> <ul> <li>gn-cloud: Contains resources and configurations for deploying GeoNode Cloud.</li> <li>gs-cloud: Includes resources and configurations specific to GeoServer Cloud.</li> <li>configs: Holds general configuration files shared across services.</li> <li>database: Contains database setup and configuration files.</li> </ul>"},{"location":"es/#geonode-cloud","title":"GeoNode Cloud","text":"<p>GeoNode Cloud es una implementaci\u00f3n avanzada de la plataforma GeoNode basada en la nube, optimizada para aprovechar tecnolog\u00edas nativas o adaptadas a la nube. Esta soluci\u00f3n est\u00e1 dise\u00f1ada para desplegarse en Kubernetes, lo que permite escalabilidad, gesti\u00f3n eficiente y resiliencia.</p> <p>GeoNode Cloud incluye el proyecto GeoServer Cloud, que ofrece un s\u00f3lido soporte para la publicaci\u00f3n, edici\u00f3n y gesti\u00f3n de datos geoespaciales. Esta integraci\u00f3n refuerza el rol de GeoNode Cloud como una infraestructura moderna y eficiente para gestionar informaci\u00f3n geoespacial en la nube. </p> <p>Al utilizar GeoNode Cloud, las organizaciones pueden beneficiarse de una mayor flexibilidad, reducci\u00f3n de costos operativos e integraci\u00f3n fluida con otras herramientas y servicios nativos de la nube.</p>"},{"location":"fr/project/","title":"Project Structure","text":"<p>The project structure for deploying GeoNode Cloud and GeoServer Cloud on Kubernetes is organized into key directories that contain the manifests required to configure and operate the applications. The following repository includes all the manifests needed for deployment.</p> <p>Main Directories</p> <ul> <li>gn-cloud: Contains resources and configurations for deploying GeoNode Cloud.</li> <li>gs-cloud: Includes resources and configurations specific to GeoServer Cloud.</li> <li>configs: Holds general configuration files shared across services.</li> <li>database: Contains database setup and configuration files.</li> </ul>"}]}